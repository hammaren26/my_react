{"version":3,"sources":["webpack:///./src/my_components/Profile/My posts/MyPosts.module.scss?724f","my_components/Profile/My posts/MyPosts.module.scss","my_components/Profile/My posts/Post/Post.module.css","my_components/common/FormsControls/FormsControls.module.css","my_components/Profile/ProfileInfo/ProfileStatusWithHooks.js","my_components/Profile/ProfileInfo/ProfileDataForm.js","my_components/Profile/ProfileInfo/ProfileInfo.js","my_components/Profile/My posts/Post/Post.js","my_components/common/FormsControls/FormsControls.js","my_components/Profile/My posts/MyPosts.js","my_components/Profile/My posts/MyPostsContainer.js","my_components/Profile/Profile.js","my_components/Profile/ProfileConatainer.js"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_EXPORT___","push","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","className","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileDataForm","profile","ProfileInfo","savePhoto","isOwner","Preloader","src","photos","large","userPhoto","alt","type","target","files","length","goToEditMode","ProfileData","onClick","fullName","lookingForAJob","aboutMe","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","Post","message","likes","Textarea","input","placeholder","hasError","s","error","composeValidators","validators","reduce","validator","undefined","AddNewPostForm","onSubmit","values","addPost","newPostText","render","handleSubmit","form","submitting","pristine","name","validate","requiredField","maxLengthCreator","meta","touched","MyPosts","React","memo","posts","postsData","p","item","likesCount","DialogsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","userProfile","userStatus","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.d16dc095.chunk.js","sourcesContent":["var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./MyPosts.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._3pfw47Hg17p1EyBRMw4u9W{border:1px solid black}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/my_components/Profile/My posts/MyPosts.module.scss\"],\"names\":[],\"mappings\":\"AAAA,yBACE,sBAAuB\",\"sourcesContent\":[\".posts {\\r\\n  border: 1px solid black;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"posts\": \"_3pfw47Hg17p1EyBRMw4u9W\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1OPie\",\"active\":\"Post_active__3hUJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__-M3tF\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={activateEditMode}>\r\n                    <b>Статус:</b> {props.status || '-------'}\r\n                  </span>\r\n                : <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        className='test'\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nconst ProfileDataForm = ({profile}) => {\r\n    return (\r\n        <div>\r\n            form\r\n            {/*<form action=\"\">*/}\r\n            {/*    <div>*/}\r\n            {/*        <button onClick={goToEditMode}>save</button>*/}\r\n            {/*    </div>*/}\r\n\r\n            {/*    <div>*/}\r\n            {/*        <b>Fullname:</b> {profile.fullName || '-------'}*/}\r\n            {/*    </div>*/}\r\n            {/*    <div>*/}\r\n            {/*        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}*/}\r\n            {/*    </div>*/}\r\n\r\n            {/*    {profile.lookingForAJob*/}\r\n            {/*        ? <div>*/}\r\n            {/*            <b>My proffesional skills: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}*/}\r\n            {/*        </div>*/}\r\n            {/*        : null*/}\r\n            {/*    }*/}\r\n\r\n            {/*    <div>*/}\r\n            {/*        <b>About me: </b> {profile.aboutMe || '-------'}*/}\r\n            {/*    </div>*/}\r\n\r\n            {/*    <div>*/}\r\n            {/*        <h1>Contacts:</h1> {*/}\r\n            {/*        Object.keys(profile.contacts).map(key => {*/}\r\n            {/*            return (*/}\r\n            {/*                <Contact*/}\r\n            {/*                    key={key}*/}\r\n            {/*                    contactTitle={key}*/}\r\n            {/*                    contactValue={profile.contacts[key]}*/}\r\n            {/*                />*/}\r\n            {/*            )*/}\r\n            {/*        })*/}\r\n            {/*    }*/}\r\n            {/*    </div>*/}\r\n            {/*</form>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDataForm;","import React, {useEffect, useState} from 'react'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/16.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nexport default function ProfileInfo(props) {\r\n    let {\r\n        profile,\r\n        status,\r\n        updateStatus,\r\n        savePhoto,\r\n        isOwner\r\n    } = props;\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected  = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='content__head'>\r\n            <img src={profile.photos.large || userPhoto}\r\n                 alt=\"placeholder\"\r\n            />\r\n\r\n            {\r\n                isOwner\r\n                    ? <div className=\"hui\">\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                      </div>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                editMode\r\n                    ? <ProfileDataForm profile={profile}/>\r\n                    : <ProfileData\r\n                        isOwner={isOwner}\r\n                        profile={profile}\r\n                        goToEditMode={ () => { setEditMode(true) } }\r\n                      />\r\n            }\r\n\r\n            <ProfileStatusWithHooks\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                isOwner\r\n                    ? <div>\r\n                        <button onClick={goToEditMode}>edit</button>\r\n                      </div>\r\n                    : null\r\n            }\r\n            <div>\r\n                <b>Fullname:</b> {profile.fullName || '-------'}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n\r\n            {profile.lookingForAJob\r\n                ? <div>\r\n                    <b>My proffesional skills: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div>\r\n                <b>About me: </b> {profile.aboutMe || '-------'}\r\n            </div>\r\n\r\n            <div>\r\n                <h1>Contacts:</h1> {\r\n                Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <Contact\r\n                            key={key}\r\n                            contactTitle={key}\r\n                            contactValue={profile.contacts[key]}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>{contactValue || '----'}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n// import {item, active} from './Post.module.css'\r\n\r\nexport default function Post(props) {\r\n    return (\r\n        <div className={props.className}>\r\n            <span>{props.message}</span>\r\n            <span>Likes: {props.likes}</span>\r\n        </div>\r\n    );\r\n}","import s from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({ input, placeholder, hasError }) => {\r\n    return (\r\n        <textarea {...input} placeholder={placeholder} className={hasError && s.error}/>\r\n    )\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from \"./Post/Post\";\r\nimport {item} from './Post/Post.module.css';\r\nimport {Form, Field} from 'react-final-form';\r\nimport {maxLengthCreator, requiredField} from \"../../../Utils/Validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={values => {\r\n                props.addPost(values.newPostText);\r\n            }}\r\n            render={({handleSubmit, form, submitting, pristine, values}) => {\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field\r\n                            name='newPostText'\r\n                            validate={composeValidators(requiredField, maxLengthCreator(10))}\r\n                        >\r\n                            {({input, meta}) => {\r\n                                const hasError = meta.touched && meta.error;\r\n                                return (\r\n                                    <div>\r\n                                        <Textarea input={input} placeholder=\"Last Name\" hasError={hasError}/>\r\n                                        {hasError && <span>{meta.error}</span>}\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        </Field>\r\n                        <button>Add Post</button>\r\n                    </form>\r\n                )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let posts = props.postsData.map(p => <Post message={p.message} className={`${item}`}\r\n                                               likes={p.likesCount}/>);\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h3>My posts:</h3>\r\n            <AddNewPostForm addPost={props.addPost}/>\r\n            {posts}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// export default function MyPostsContainer() {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//         {\r\n//             store => {\r\n//                 let state = store.getState() ;\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 }\r\n//\r\n//                 let updateNewPostText = (text) => {\r\n//                     store.dispatch(updateNewPostTextActionCreator(text));\r\n//                 }\r\n//                 return (\r\n//                     <MyPosts\r\n//                         updateNewPostText={updateNewPostText}\r\n//                         addPost={addPost}\r\n//                         postsData={state.profilePage.postsData}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 )\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default DialogsContainer;","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\n\r\nexport default function Profile(props) {\r\n    let {\r\n        isOwner,\r\n        profile,\r\n        status,\r\n        updateStatus,\r\n        savePhoto\r\n    } = props;\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={isOwner}\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                savePhoto={savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            // if (!userId) {\r\n            //     this.props.history.push('/login');\r\n            // }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n            >\r\n            </Profile>\r\n        );\r\n    }\r\n}\r\n\r\n // let AuthRedirectComponent = (props) => {\r\n//     if (!this.props.isAuth) {\r\n//         return (\r\n//             <Redirect to={\"/login\"}/>\r\n//         )\r\n//     }\r\n//     return <ProfileContainer {...props}/>\r\n// }\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.userStatus,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}